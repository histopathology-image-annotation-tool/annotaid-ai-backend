name: Build and Release

on:
  push:
    branches: [main]

env:
  POETRY_VERSION: 1.6.1

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    concurrency: push
    outputs:
      last_tag: ${{ steps.release.outputs.last_tag }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Semantic release
        id: release
        run: |
          pip install python-semantic-release poetry==${{ env.POETRY_VERSION }}

          git config --global user.name "release-bot"
          git config --global user.email "github-actions@github.com"

          # save previous version
          LAST_VERSION=$(poetry version -s)

          echo "last_tag=${LAST_VERSION}" >> $GITHUB_OUTPUT

          # semantic release
          semantic-release version

          # save new version
          VERSION=$(poetry version -s)

          echo "tag=${VERSION}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  docker_backend:
    needs: [release]
    if: needs.release.outputs.tag != needs.release.outputs.last_tag
    name: "Build and push backend docker image"
    uses: ./.github/workflows/docker.yaml
    with:
      dockerfile: ./docker/backend.dockerfile
      image_name: backend
      tag: ${{ needs.release.outputs.tag }}
    secrets: inherit

  docker_worker:
    needs: [release]
    if: needs.release.outputs.tag != needs.release.outputs.last_tag
    name: "Build and push worker docker image"
    uses: ./.github/workflows/docker.yaml
    with:
      dockerfile: ./docker/worker.dockerfile
      image_name: worker
      tag: ${{ needs.release.outputs.tag }}
    secrets: inherit
